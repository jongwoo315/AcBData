1. /bin/www
	서버 실행, 포트:3000
	var app = require('../app');
	app.set('port', port);
	var server = http.createServer(app); 

2. localhost:3000으로 접속 (app.js)
	//view설정, jade형식으로 사용하겠다는 선언	
	app.set('views', path.join(__dirname, 'views'));
	app.set('view engine', 'jade');
	
	//javascript파일 경로 지정
	app.use(express.static(path.join(__dirname, '/public')));

	var db = monk('localhost:27017/nodetest2')
	app.use(function(req, res, next){
    	req.db = db; 
        next();
	});

3. localhost:3000/ 으로 접속하면 index를 불러옴 (app.js)
	app.use('/', index);
	// index는 require('./routes/index'); 여기에 위치한 .js파일을 의미
	var index = require('./routes/index'); -> index.js를 불러옴

4. ./routes/index.js	
	router.get('/', function(req, res, next) {
		res.render('index');
	});
	//res.render에서 index.jade의 부분을 통째로 클라이언트에게 넘긴다.
	module.exports = router;    //app.js로 넘겨주는 부분 //


5. ./views/index.jade
	extends layout -> layout.jade를 불러옴 -> layout.jade는 jquery와 global.js를 불러옴
		layout.jade의 내용 ㄱ
 		script(src="jquery/3.1.1/jquery.min.js")
		script(src="/javascripts/global1.js"
	
	global.js의 내용
		$(document).ready(function(){populateTable();});	//자동으로 실행되게 하는것?
		function populateTable(){};

	back to index.jade
		layout.jade에 들어간 global.js이 index.jade로 또 다시 들어감
		

		


